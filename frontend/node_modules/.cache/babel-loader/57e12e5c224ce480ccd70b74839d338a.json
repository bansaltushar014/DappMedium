{"ast":null,"code":"var _jsxFileName = \"/home/tushar/Downloads/projects/Ethereum Practice/17 DappMedium/DappMedium/frontend/src/dashboard.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { FormControl, Card, FormGroup, ControlLabel, Modal, Spinner, HelpBlock, Checkbox, Radio, Row, Container, Col, Form, Button, ThemeProvider } from 'react-bootstrap';\nimport web3 from './helper.js';\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n\n    this.getNoOfArticles = async () => {\n      console.log(\"Inside getNoOfArticles;\");\n      await this.contractInstance.methods.noOfarticles().call().then(r => {\n        console.log(r);\n        return this.getTheArticle(r);\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.getTheArticle = async num => {\n      console.log(\"Inside getTheArticle\");\n      var hashes = [];\n      var i;\n\n      for (i = 0; i < num; i++) {\n        await this.contractInstance.methods.getArticle(i).call().then(r => {\n          console.log(r);\n          hashes.push(r);\n          if (i == num - 1) return this.getDataFromIpfs(hashes, num);\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    };\n\n    this.getDataFromIpfs = async (hash, num) => {\n      var that = this;\n      console.log(\"Inside getDataFromIpfs!\");\n      var i;\n\n      for (i = 0; i < num; i++) {\n        await axios.get('https://ipfs.io/ipfs/' + hash[i]).then(r => {\n          console.log(r);\n          var data = that.state.articlesData.concat(r);\n          that.setState({\n            articlesData: data\n          });\n          that.setState({\n            show: 1\n          });\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n\n      if (i == num) this.setState({\n        loading: 1\n      });\n    };\n\n    this.getWriteAddress = index => {\n      console.log(\"Inside getTheAddress\");\n      this.contractInstance.methods.getWriterAddress(index).call().then(r => {\n        console.log(r);\n        return r;\n      }).catch(e => {\n        console.log(e);\n        return e;\n      });\n    };\n\n    this.payToRead = async index => {\n      var that = this;\n      await web3.eth.getAccounts(function (error, result) {\n        that.contractInstance.methods.getWriterAddress(index).call().then(r => {\n          var that1 = that;\n          web3.eth.sendTransaction({\n            from: result[0],\n            to: r,\n            value: web3.utils.toWei(\"0.01\", 'ether'),\n            gasLimit: 21000,\n            gasPrice: 20000000000\n          }, function (err, transactionHash) {\n            if (!err) console.log(transactionHash);\n          }).then(r => {\n            console.log(\"Transaction Confirmed \" + JSON.stringify(r));\n            var sendHash = window.open(\"./openPdf\");\n            sendHash.hashIs = that1.state.articlesData[index];\n          });\n        });\n      });\n    };\n\n    this.state = {\n      write: 1,\n      show: 0,\n      articlesData: [],\n      demo: \"\",\n      loading: 0\n    };\n    this.getNoOfArticles = this.getNoOfArticles.bind(this);\n    this.payToRead = this.payToRead.bind(this);\n    this.getWriteAddress = this.getWriteAddress.bind(this); // this.getArticle = this.getArticle.bind(this);\n\n    global.addresses = [];\n  }\n\n  componentWillMount() {\n    console.log(this.props.contractInstance);\n    this.contractInstance = this.props.contractInstance;\n    this.getNoOfArticles();\n  } // Get the number of articles exist in Blockchain\n\n\n  render() {\n    const {\n      write,\n      show,\n      articlesData,\n      demo,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, loading == 0 && /*#__PURE__*/React.createElement(React.Fragment, null, \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"Loading...\"))), loading == 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, articlesData.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"border border-dark\",\n        style: {\n          padding: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: '98%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 27\n        }\n      }, item.data.title), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        style: {\n          overflow: 'hidden',\n          width: '90%'\n        },\n        name: \"description\",\n        rows: \"2\",\n        defaultValue: item.data.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.payToRead(index),\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 27\n        }\n      }, \"Read for 0.01 Eth\")))));\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/tushar/Downloads/projects/Ethereum Practice/17 DappMedium/DappMedium/frontend/src/dashboard.js"],"names":["React","axios","FormControl","Card","FormGroup","ControlLabel","Modal","Spinner","HelpBlock","Checkbox","Radio","Row","Container","Col","Form","Button","ThemeProvider","web3","Dashboard","Component","constructor","getNoOfArticles","console","log","contractInstance","methods","noOfarticles","call","then","r","getTheArticle","catch","e","num","hashes","i","getArticle","push","getDataFromIpfs","hash","that","get","data","state","articlesData","concat","setState","show","loading","getWriteAddress","index","getWriterAddress","payToRead","eth","getAccounts","error","result","that1","sendTransaction","from","to","value","utils","toWei","gasLimit","gasPrice","err","transactionHash","JSON","stringify","sendHash","window","open","hashIs","write","demo","bind","global","addresses","componentWillMount","props","render","map","item","padding","width","title","overflow","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport { FormControl, Card, FormGroup, ControlLabel, Modal, Spinner, HelpBlock, Checkbox, Radio, Row, Container, Col, Form, Button, ThemeProvider } from 'react-bootstrap';\nimport web3 from './helper.js';\n\nclass Dashboard extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      write: 1,\n      show: 0,\n      articlesData: [],\n      demo: \"\",\n      loading: 0\n    }\n\n    this.getNoOfArticles = this.getNoOfArticles.bind(this);\n    this.payToRead = this.payToRead.bind(this);\n    this.getWriteAddress = this.getWriteAddress.bind(this);\n    // this.getArticle = this.getArticle.bind(this);\n    global.addresses = [];\n  }\n\n\n  componentWillMount() {\n    console.log(this.props.contractInstance);\n    this.contractInstance = this.props.contractInstance;\n    this.getNoOfArticles()\n  }\n\n  // Get the number of articles exist in Blockchain\n  getNoOfArticles = async () => {\n    console.log(\"Inside getNoOfArticles;\");\n    await this.contractInstance.methods.noOfarticles().call()\n      .then(r => {\n        console.log(r)\n        return this.getTheArticle(r);\n      })\n      .catch(e => { console.log(e) })\n  }\n\n  // Get the articles hashes one by one\n  getTheArticle = async (num) => {\n\n    console.log(\"Inside getTheArticle\");\n\n    var hashes = [];\n    var i;\n\n    for (i = 0; i < num; i++) {\n      await this.contractInstance.methods.getArticle(i).call()\n        .then(r => {\n          console.log(r);\n          hashes.push(r);\n\n          if (i == num - 1)\n            return this.getDataFromIpfs(hashes, num);\n        })\n        .catch(e => { console.log(e) });\n    }\n  }\n\n  // Extract the data from the hash one by one\n  getDataFromIpfs = async (hash, num) => {\n    var that = this;\n    console.log(\"Inside getDataFromIpfs!\");\n    var i;\n    for (i = 0; i < num; i++) {\n      await axios.get('https://ipfs.io/ipfs/' + hash[i])\n        .then(r => {\n          console.log(r);\n          var data = that.state.articlesData.concat(r);\n          that.setState({ articlesData: data })\n          that.setState({ show: 1 });\n        })\n        .catch(e => {\n          console.log(e);\n        })\n    }\n\n    if (i == num)\n      this.setState({ loading: 1 });\n\n  }\n\n  // Get the Writer's address of article\n  getWriteAddress = (index) => {\n    console.log(\"Inside getTheAddress\");\n    this.contractInstance.methods.getWriterAddress(index).call()\n      .then(r => {\n        console.log(r)\n        return r;\n      })\n      .catch(e => {\n        console.log(e)\n        return e;\n      });\n  }\n\n  // Get the index of particular article and transfer the money to Writer\n  // On its success redirect to OpenPDF\n  payToRead = async (index) => {\n    var that = this;\n    await web3.eth.getAccounts(function (error, result) {\n      that.contractInstance.methods.getWriterAddress(index).call()\n        .then(r => {\n          var that1 = that;\n          web3.eth.sendTransaction({\n            from: result[0],\n            to: r, value:\n              web3.utils.toWei(\"0.01\", 'ether'),\n            gasLimit: 21000,\n            gasPrice: 20000000000\n          }, function (err, transactionHash) {\n            if (!err)\n              console.log(transactionHash);\n          })\n            .then(r => {\n              console.log(\"Transaction Confirmed \" + JSON.stringify(r));\n              var sendHash = window.open(\"./openPdf\");\n              sendHash.hashIs = that1.state.articlesData[index];\n            })\n        })\n    });\n  }\n\n  render() {\n\n    const { write, show, articlesData, demo, loading } = this.state;\n\n    return (\n      <>\n        {loading == 0 &&\n          <>\n            &nbsp;&nbsp;\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          </>\n        }\n        {loading == 1 &&\n          <>\n\n            <Container >\n\n\n\n              {\n                articlesData.map((item, index) => {\n                  return <div key={index}>\n                    <Row className=\"border border-dark\" style={{ padding: \"20px\" }}>\n                      <br></br>\n                      <Card style={{ width: '98%' }}>\n                        <Card.Body>\n                          <Card.Title>\n                            {item.data.title}\n                          </Card.Title>\n                          <Card.Text>\n                            <textarea style={{ overflow: 'hidden', width: '90%' }} name=\"description\" rows=\"2\" defaultValue={item.data.text} />\n                          </Card.Text>\n                          <Button onClick={() => this.payToRead(index)} variant=\"primary\">Read for 0.01 Eth</Button>\n                        </Card.Body>\n                      </Card>\n                    </Row>\n                  </div>\n                })\n              }\n\n            </Container>\n            <br></br>\n            <br></br>\n\n          </>\n        }\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}